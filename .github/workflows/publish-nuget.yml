name: Publish NuGet Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish'
        required: false
        type: string

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for GitVersioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersioning
        run: dotnet tool install --global nbgv

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=$(nbgv get-version -v NuGetPackageVersion)" >> $GITHUB_OUTPUT
          fi

      - name: Restore dependencies
        run: |
          dotnet restore src/Coderynx.MediatorKit.Abstractions/Coderynx.MediatorKit.Abstractions.csproj
          dotnet restore src/Coderynx.MediatorKit/Coderynx.MediatorKit.csproj

      - name: Build
        run: |
          dotnet build src/Coderynx.MediatorKit.Abstractions/Coderynx.MediatorKit.Abstractions.csproj --configuration Release --no-restore
          dotnet build src/Coderynx.MediatorKit/Coderynx.MediatorKit.csproj --configuration Release --no-restore

      - name: Pack
        run: |
          dotnet pack src/Coderynx.MediatorKit.Abstractions/Coderynx.MediatorKit.Abstractions.csproj --configuration Release --no-build --output ./nupkg
          dotnet pack src/Coderynx.MediatorKit/Coderynx.MediatorKit.csproj --configuration Release --no-build --output ./nupkg

      - name: Verify packages
        run: |
          echo "Generated packages:"
          ls -la ./nupkg/
          
      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
